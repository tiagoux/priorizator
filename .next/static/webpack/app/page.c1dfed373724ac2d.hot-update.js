"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://placeholder.supabase.co\";\nconst supabaseAnonKey = \"placeholder_key\";\n// Create a safe fallback client if credentials are not configured\nlet supabase;\nif (supabaseUrl && supabaseAnonKey && supabaseUrl !== \"https://placeholder.supabase.co\" && supabaseAnonKey !== \"placeholder_key\") {\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n} else {\n    // Create a dummy client that won't make real requests\n    console.warn(\"Supabase credentials not configured. Using mock client.\");\n    supabase = {\n        auth: {\n            getSession: ()=>Promise.resolve({\n                    data: {\n                        session: null\n                    },\n                    error: null\n                }),\n            onAuthStateChange: ()=>({\n                    data: {\n                        subscription: {\n                            unsubscribe: ()=>{}\n                        }\n                    }\n                }),\n            signInWithOAuth: ()=>Promise.resolve({\n                    data: null,\n                    error: new Error(\"Supabase not configured\")\n                }),\n            signOut: ()=>Promise.resolve({\n                    error: null\n                })\n        },\n        from: ()=>({\n                select: ()=>Promise.resolve({\n                        data: [],\n                        error: null\n                    }),\n                insert: ()=>Promise.resolve({\n                        data: null,\n                        error: new Error(\"Supabase not configured\")\n                    }),\n                update: ()=>Promise.resolve({\n                        data: null,\n                        error: new Error(\"Supabase not configured\")\n                    }),\n                delete: ()=>Promise.resolve({\n                        data: null,\n                        error: new Error(\"Supabase not configured\")\n                    })\n            })\n    };\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsaUNBQW9DO0FBQ3hELE1BQU1HLGtCQUFrQkgsaUJBQXlDO0FBRWpFLGtFQUFrRTtBQUNsRSxJQUFJSztBQUVKLElBQUlOLGVBQWVJLG1CQUNmSixnQkFBZ0IscUNBQ2hCSSxvQkFBb0IsbUJBQW1CO0lBQ3pDRSxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUk7QUFDdkMsT0FBTztJQUNMLHNEQUFzRDtJQUN0REcsUUFBUUMsSUFBSSxDQUFDO0lBQ2JGLFdBQVc7UUFDVEcsTUFBTTtZQUNKQyxZQUFZLElBQU1DLFFBQVFDLE9BQU8sQ0FBQztvQkFBRUMsTUFBTTt3QkFBRUMsU0FBUztvQkFBSztvQkFBR0MsT0FBTztnQkFBSztZQUN6RUMsbUJBQW1CLElBQU87b0JBQUVILE1BQU07d0JBQUVJLGNBQWM7NEJBQUVDLGFBQWEsS0FBTzt3QkFBRTtvQkFBRTtnQkFBRTtZQUM5RUMsaUJBQWlCLElBQU1SLFFBQVFDLE9BQU8sQ0FBQztvQkFBRUMsTUFBTTtvQkFBTUUsT0FBTyxJQUFJSyxNQUFNO2dCQUEyQjtZQUNqR0MsU0FBUyxJQUFNVixRQUFRQyxPQUFPLENBQUM7b0JBQUVHLE9BQU87Z0JBQUs7UUFDL0M7UUFDQU8sTUFBTSxJQUFPO2dCQUNYQyxRQUFRLElBQU1aLFFBQVFDLE9BQU8sQ0FBQzt3QkFBRUMsTUFBTSxFQUFFO3dCQUFFRSxPQUFPO29CQUFLO2dCQUN0RFMsUUFBUSxJQUFNYixRQUFRQyxPQUFPLENBQUM7d0JBQUVDLE1BQU07d0JBQU1FLE9BQU8sSUFBSUssTUFBTTtvQkFBMkI7Z0JBQ3hGSyxRQUFRLElBQU1kLFFBQVFDLE9BQU8sQ0FBQzt3QkFBRUMsTUFBTTt3QkFBTUUsT0FBTyxJQUFJSyxNQUFNO29CQUEyQjtnQkFDeEZNLFFBQVEsSUFBTWYsUUFBUUMsT0FBTyxDQUFDO3dCQUFFQyxNQUFNO3dCQUFNRSxPQUFPLElBQUlLLE1BQU07b0JBQTJCO1lBQzFGO0lBQ0Y7QUFDRjtBQUVvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL3N1cGFiYXNlLnRzPzA2ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkw7XG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWTtcblxuLy8gQ3JlYXRlIGEgc2FmZSBmYWxsYmFjayBjbGllbnQgaWYgY3JlZGVudGlhbHMgYXJlIG5vdCBjb25maWd1cmVkXG5sZXQgc3VwYWJhc2U7XG5cbmlmIChzdXBhYmFzZVVybCAmJiBzdXBhYmFzZUFub25LZXkgJiYgXG4gICAgc3VwYWJhc2VVcmwgIT09ICdodHRwczovL3BsYWNlaG9sZGVyLnN1cGFiYXNlLmNvJyAmJiBcbiAgICBzdXBhYmFzZUFub25LZXkgIT09ICdwbGFjZWhvbGRlcl9rZXknKSB7XG4gIHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpO1xufSBlbHNlIHtcbiAgLy8gQ3JlYXRlIGEgZHVtbXkgY2xpZW50IHRoYXQgd29uJ3QgbWFrZSByZWFsIHJlcXVlc3RzXG4gIGNvbnNvbGUud2FybignU3VwYWJhc2UgY3JlZGVudGlhbHMgbm90IGNvbmZpZ3VyZWQuIFVzaW5nIG1vY2sgY2xpZW50LicpO1xuICBzdXBhYmFzZSA9IHtcbiAgICBhdXRoOiB7XG4gICAgICBnZXRTZXNzaW9uOiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiB7IHNlc3Npb246IG51bGwgfSwgZXJyb3I6IG51bGwgfSksXG4gICAgICBvbkF1dGhTdGF0ZUNoYW5nZTogKCkgPT4gKHsgZGF0YTogeyBzdWJzY3JpcHRpb246IHsgdW5zdWJzY3JpYmU6ICgpID0+IHt9IH0gfSB9KSxcbiAgICAgIHNpZ25JbldpdGhPQXV0aDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWQnKSB9KSxcbiAgICAgIHNpZ25PdXQ6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGVycm9yOiBudWxsIH0pXG4gICAgfSxcbiAgICBmcm9tOiAoKSA9PiAoe1xuICAgICAgc2VsZWN0OiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiBbXSwgZXJyb3I6IG51bGwgfSksXG4gICAgICBpbnNlcnQ6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIG5vdCBjb25maWd1cmVkJykgfSksXG4gICAgICB1cGRhdGU6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIG5vdCBjb25maWd1cmVkJykgfSksXG4gICAgICBkZWxldGU6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIG5vdCBjb25maWd1cmVkJykgfSlcbiAgICB9KVxuICB9O1xufVxuXG5leHBvcnQgeyBzdXBhYmFzZSB9OyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiY29uc29sZSIsIndhcm4iLCJhdXRoIiwiZ2V0U2Vzc2lvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwiZGF0YSIsInNlc3Npb24iLCJlcnJvciIsIm9uQXV0aFN0YXRlQ2hhbmdlIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJzaWduSW5XaXRoT0F1dGgiLCJFcnJvciIsInNpZ25PdXQiLCJmcm9tIiwic2VsZWN0IiwiaW5zZXJ0IiwidXBkYXRlIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase.ts\n"));

/***/ })

});